var app=function(){"use strict";function t(){}function n(t){return t()}function e(){return Object.create(null)}function s(t){t.forEach(n)}function a(t){return"function"==typeof t}function o(t,n){return t!=t?n==n:t!==n}function c(t,n,e,s){return t[1]&&s?function(t,n){for(const e in n)t[e]=n[e];return t}(e.ctx.slice(),t[1](s(n))):e.ctx}function r(t,n,e,s,a,o,r){const l=function(t,n,e,s){if(t[2]&&s){const a=t[2](s(e));if(void 0===n.dirty)return a;if("object"==typeof a){const t=[],e=Math.max(n.dirty.length,a.length);for(let s=0;s<e;s+=1)t[s]=n.dirty[s]|a[s];return t}return n.dirty|a}return n.dirty}(n,s,a,o);if(l){const a=c(n,e,s,r);t.p(a,l)}}function l(t,n){t.appendChild(n)}function i(t,n,e){t.insertBefore(n,e||null)}function p(t){t.parentNode.removeChild(t)}function u(t){return document.createElement(t)}function d(t){return document.createTextNode(t)}function f(){return d(" ")}function g(t,n,e){null==e?t.removeAttribute(n):t.getAttribute(n)!==e&&t.setAttribute(n,e)}function h(t,n,e){t.classList[e?"add":"remove"](n)}let k;function m(t){k=t}function v(){if(!k)throw new Error("Function called outside component initialization");return k}function y(){const t=v();return(n,e)=>{const s=t.$$.callbacks[n];if(s){const a=function(t,n){const e=document.createEvent("CustomEvent");return e.initCustomEvent(t,!1,!1,n),e}(n,e);s.slice().forEach((n=>{n.call(t,a)}))}}}const $=[],b=[],x=[],w=[],E=Promise.resolve();let M=!1;function _(){M||(M=!0,E.then(L))}function C(t){x.push(t)}let I=!1;const T=new Set;function L(){if(!I){I=!0;do{for(let t=0;t<$.length;t+=1){const n=$[t];m(n),O(n.$$)}for(m(null),$.length=0;b.length;)b.pop()();for(let t=0;t<x.length;t+=1){const n=x[t];T.has(n)||(T.add(n),n())}x.length=0}while($.length);for(;w.length;)w.pop()();M=!1,I=!1,T.clear()}}function O(t){if(null!==t.fragment){t.update(),s(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(C)}}const H=new Set;function S(t,n){t&&t.i&&(H.delete(t),t.i(n))}function j(t,n,e,s){if(t&&t.o){if(H.has(t))return;H.add(t),undefined.c.push((()=>{H.delete(t),s&&(e&&t.d(1),s())})),t.o(n)}}function P(t,e,o){const{fragment:c,on_mount:r,on_destroy:l,after_update:i}=t.$$;c&&c.m(e,o),C((()=>{const e=r.map(n).filter(a);l?l.push(...e):s(e),t.$$.on_mount=[]})),i.forEach(C)}function A(t,n){const e=t.$$;null!==e.fragment&&(s(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}function N(n,a,o,c,r,l,i=[-1]){const u=k;m(n);const d=a.props||{},f=n.$$={fragment:null,ctx:null,props:l,update:t,not_equal:r,bound:e(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:e(),dirty:i,skip_bound:!1};let g=!1;if(f.ctx=o?o(n,d,((t,e,...s)=>{const a=s.length?s[0]:e;return f.ctx&&r(f.ctx[t],f.ctx[t]=a)&&(!f.skip_bound&&f.bound[t]&&f.bound[t](a),g&&function(t,n){-1===t.$$.dirty[0]&&($.push(t),_(),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}(n,t)),e})):[],f.update(),g=!0,s(f.before_update),f.fragment=!!c&&c(f.ctx),a.target){if(a.hydrate){const t=function(t){return Array.from(t.childNodes)}(a.target);f.fragment&&f.fragment.l(t),t.forEach(p)}else f.fragment&&f.fragment.c();a.intro&&S(n.$$.fragment),P(n,a.target,a.anchor),L()}m(u)}class q{$destroy(){A(this,1),this.$destroy=t}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(t){var n;this.$$set&&(n=t,0!==Object.keys(n).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const D=t=>({intersecting:2&t,entry:1&t}),z=t=>({intersecting:t[1],entry:t[0]});function U(t){let n;const e=t[7].default,s=function(t,n,e,s){if(t){const a=c(t,n,e,s);return t[0](a)}}(e,t,t[6],z);return{c(){s&&s.c()},m(t,e){s&&s.m(t,e),n=!0},p(t,[n]){s&&s.p&&67&n&&r(s,e,t,t[6],n,D,z)},i(t){n||(S(s,t),n=!0)},o(t){j(s,t),n=!1},d(t){s&&s.d(t)}}}function Y(t,n,e){let{$$slots:s={},$$scope:a}=n,{element:o=null}=n,{root:c=null}=n,{rootMargin:r="0px"}=n,{threshold:l=0}=n,{entry:i=null}=n,{intersecting:p=!1}=n;const u=y();let d,f=null;var g;return g=async()=>{null!=i&&u("observe",i),await(_(),E),null!=o&&o!=f&&(d.observe(o),null!=f&&d.unobserve(f),f=o)},v().$$.after_update.push(g),function(t){v().$$.on_destroy.push(t)}((()=>{d.disconnect()})),t.$$set=t=>{"element"in t&&e(2,o=t.element),"root"in t&&e(3,c=t.root),"rootMargin"in t&&e(4,r=t.rootMargin),"threshold"in t&&e(5,l=t.threshold),"entry"in t&&e(0,i=t.entry),"intersecting"in t&&e(1,p=t.intersecting),"$$scope"in t&&e(6,a=t.$$scope)},t.$$.update=()=>{56&t.$$.dirty&&(d=new IntersectionObserver((t=>{t.forEach((t=>{e(0,i=t),e(1,p=t.isIntersecting)}))}),{root:c,rootMargin:r,threshold:l}))},[i,p,o,c,r,l,a,s]}class B extends q{constructor(t){super(),N(this,t,Y,U,o,{element:2,root:3,rootMargin:4,threshold:5,entry:0,intersecting:1})}}function G(t){let n;return{c(){n=d("Element is in view")},m(t,e){i(t,n,e)},d(t){t&&p(n)}}}function R(t){let n,e,s=t[1]&&G();return{c(){n=u("div"),s&&s.c(),e=f()},m(a,o){i(a,n,o),s&&s.m(n,null),t[2](n),i(a,e,o)},p(t,e){t[1]?s||(s=G(),s.c(),s.m(n,null)):s&&(s.d(1),s=null)},d(a){a&&p(n),s&&s.d(),t[2](null),a&&p(e)}}}function W(t){let n,e,s,a,o,c,r,k,m,v,y,$,x,E,M,_,C,I,T,L,O,H,N,q,D,z,U,Y,G,W,F,V,J,K,Q,X,Z,tt,nt,et,st,at,ot,ct,rt,lt,it,pt,ut=t[1]?"Yes":"No";function dt(n){t[3].call(null,n)}let ft={element:t[0],$$slots:{default:[R]},$$scope:{ctx:t}};return void 0!==t[1]&&(ft.intersecting=t[1]),D=new B({props:ft}),b.push((()=>function(t,n,e){const s=t.$$.props[n];void 0!==s&&(t.$$.bound[s]=e,e(t.$$.ctx[s]))}(D,"intersecting",dt))),{c(){var l;n=u("main"),e=u("h1"),e.textContent="svelte-intersection-observer",s=f(),a=u("p"),a.innerHTML='<a href="https://npmjs.com/package/svelte-intersection-observer"><img src="https://img.shields.io/npm/v/svelte-intersection-observer.svg?color=%235832c9" alt="NPM"/></a> \n<a href="https://travis-ci.com/metonym/svelte-intersection-observer"><img src="https://travis-ci.com/metonym/svelte-intersection-observer.svg?branch=master" alt="Build"/></a>',o=f(),c=u("blockquote"),c.innerHTML='<p>Detect if an element is in the viewport using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry">Intersection Observer API</a>.</p>',r=f(),k=u("p"),k.innerHTML='Try it in the <a href="https://svelte.dev/repl/8cd2327a580c4f429c71f7df999bd51d?version=3.29.7">Svelte REPL</a>.',m=f(),v=u("h2"),v.textContent="Install",y=f(),$=u("pre"),x=f(),E=u("h2"),E.textContent="Usage",M=f(),_=u("div"),C=u("header"),I=u("strong"),I.textContent="Scroll down.",T=f(),L=u("div"),O=d("Element in view?\n    "),H=u("strong"),N=d(ut),q=f(),(l=D.$$.fragment)&&l.c(),U=u("pre"),Y=f(),G=u("h2"),G.textContent="API",W=f(),F=u("h3"),F.textContent="Props",V=f(),J=u("table"),J.innerHTML='<thead><tr><th style="text-align:left">Prop name</th> \n<th style="text-align:left">Description</th> \n<th style="text-align:left">Value</th></tr></thead> \n<tbody><tr><td style="text-align:left">element</td> \n<td style="text-align:left">Element observed for intersection</td> \n<td style="text-align:left"><code>HTMLElement</code></td></tr> \n<tr><td style="text-align:left">root</td> \n<td style="text-align:left">Containing element</td> \n<td style="text-align:left"><code>null</code> or <code>HTMLElement</code> (default: <code>null</code>)</td></tr> \n<tr><td style="text-align:left">rootMargin</td> \n<td style="text-align:left">Offset of the containing element</td> \n<td style="text-align:left"><code>string</code> (default: <code>&quot;0px&quot;</code>)</td></tr> \n<tr><td style="text-align:left">threshold</td> \n<td style="text-align:left">Percentage of element to trigger an event</td> \n<td style="text-align:left"><code>number</code> between 0 and 1 (default: <code>0</code>)</td></tr> \n<tr><td style="text-align:left">intersecting</td> \n<td style="text-align:left">If the element is intersecting</td> \n<td style="text-align:left"><code>boolean</code></td></tr> \n<tr><td style="text-align:left">entry</td> \n<td style="text-align:left">Observed element metadata</td> \n<td style="text-align:left"><a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry"><code>IntersectionObserverEntry</code></a></td></tr> \n<tr><td style="text-align:left">intersecting</td> \n<td style="text-align:left"><code>true</code> if the observed element is intersecting the viewport</td> \n<td style="text-align:left"><code>boolean</code></td></tr></tbody>',K=f(),Q=u("h3"),Q.textContent="Dispatched events",X=f(),Z=u("ul"),Z.innerHTML="<li><strong>on:observe</strong>: fired when an intersection change occurs (type <code>IntersectionObserverEntry</code>)</li>",tt=f(),nt=u("h2"),nt.textContent="TypeScript support",et=f(),st=u("p"),st.textContent="Svelte version 3.31.0 or greater is required to use this module with TypeScript.",at=f(),ot=u("h2"),ot.innerHTML='<a href="https://github.com/metonym/svelte-intersection-observer/tree/master/CHANGELOG.md">Changelog</a>',ct=f(),rt=u("h2"),rt.textContent="License",lt=f(),it=u("p"),it.innerHTML='<a href="https://github.com/metonym/svelte-intersection-observer/tree/master/LICENSE">MIT</a>',g($,"class","language-bash"),h(H,"intersecting",t[1]),g(_,"class","code-fence"),g(U,"class","language-svelte"),g(U,"data-svelte",""),g(n,"class","markdown-body")},m(t,p){i(t,n,p),l(n,e),l(n,s),l(n,a),l(n,o),l(n,c),l(n,r),l(n,k),l(n,m),l(n,v),l(n,y),l(n,$),$.innerHTML='<span class="token function">yarn</span> <span class="token function">add</span> -D svelte-intersection-observer\n<span class="token comment"># OR</span>\n<span class="token function">npm</span> i -D svelte-intersection-observer\n',l(n,x),l(n,E),l(n,M),l(n,_),l(_,C),l(C,I),l(C,T),l(C,L),l(L,O),l(L,H),l(H,N),l(_,q),P(D,_,null),l(n,U),U.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> IntersectionObserver <span class="token keyword">from</span> <span class="token string">"svelte-intersection-observer"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> element<span class="token punctuation">;</span>\n  <span class="token keyword">let</span> intersecting<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>Scroll down.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    Element in view?\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span> <span class="token attr-name"><span class="token namespace">class:</span>intersecting</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span>intersecting <span class="token operator">?</span> <span class="token string">\'Yes\'</span> <span class="token operator">:</span> <span class="token string">\'No\'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IntersectionObserver</span> <span class="token language-javascript"><span class="token punctuation">{</span>element<span class="token punctuation">}</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>intersecting</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">bind:</span>this=</span><span class="token language-javascript"><span class="token punctuation">{</span>element<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token language-javascript"><span class="token punctuation">{</span>#<span class="token keyword">if</span> intersecting<span class="token punctuation">}</span></span>Element is in view<span class="token language-javascript"><span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>IntersectionObserver</span><span class="token punctuation">></span></span>\n',l(n,Y),l(n,G),l(n,W),l(n,F),l(n,V),l(n,J),l(n,K),l(n,Q),l(n,X),l(n,Z),l(n,tt),l(n,nt),l(n,et),l(n,st),l(n,at),l(n,ot),l(n,ct),l(n,rt),l(n,lt),l(n,it),pt=!0},p(t,[n]){(!pt||2&n)&&ut!==(ut=t[1]?"Yes":"No")&&function(t,n){n=""+n,t.wholeText!==n&&(t.data=n)}(N,ut),2&n&&h(H,"intersecting",t[1]);const e={};var s;1&n&&(e.element=t[0]),19&n&&(e.$$scope={dirty:n,ctx:t}),!z&&2&n&&(z=!0,e.intersecting=t[1],s=()=>z=!1,w.push(s)),D.$set(e)},i(t){pt||(S(D.$$.fragment,t),pt=!0)},o(t){j(D.$$.fragment,t),pt=!1},d(t){t&&p(n),A(D)}}}function F(t,n,e){let s,a;return[s,a,function(t){b[t?"unshift":"push"]((()=>{s=t,e(0,s)}))},function(t){a=t,e(1,a)}]}return new class extends q{constructor(t){super(),N(this,t,F,W,o,{})}}({target:document.body})}();
